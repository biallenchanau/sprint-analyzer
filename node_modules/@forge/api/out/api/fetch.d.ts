/// <reference types="node" />
import { RequestInfo, RequestInit, Response } from 'node-fetch';
import { Url } from 'url';
import { FetchAPI } from '..';
declare type FetchFunction = (url: RequestInfo | Url, options: RequestInit | undefined) => Promise<Response>;
export interface ProxyInformation {
    token: string;
    url: string;
}
export declare const createProxyFetch: (provider: 'app' | 'user' | undefined, remote: 'jira' | 'confluence' | 'stargate') => FetchFunction;
export declare function getNodeRuntimeAPI(): FetchAPI;
export declare function getSandboxRuntimeAPI(): FetchAPI | null;
export {};
//# sourceMappingURL=fetch.d.ts.map